steps:
  # Step 1 will upload sample data with firestore
  - id: firestore_upload_samples
    name: "gcr.io/$PROJECT_ID/upload-firestore:v1"
    args: ["--projectid=$PROJECT_ID"]

  # Step 2 will copy to the production branch to confirm successful builds
  - id: Copy_to_production_branch
    name: "gcr.io/cloud-builders/git"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        set -x && \
        # Configure Git to create commits with Cloud Build's service account
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \

        # Switch to the production branch and copy the kubernetes.yaml file from the candidate branch
        git fetch origin production && git checkout production && \
        git checkout $COMMIT_SHA version.txt && \

        # Commit the kubernetes.yaml file with a descriptive commit message
        git commit -m "Manifest from commit $COMMIT_SHA
        $(git log --format=%B -n 1 $COMMIT_SHA)" && \

        # Push the changes back to Cloud Source Repository
        git push origin production
